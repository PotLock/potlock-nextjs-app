{
	"openapi": "3.0.0",
	"info": {
		"title": "NEAR Enhanced API powered by Pagoda",
		"description": "Try out our newly released Enhanced APIs - Balances (in Beta) and get what you need for all kinds of balances and token information at ease.\nCall Enhanced APIs using the endpoint in the API URL box, varies by Network.\n\nhttps://near-testnet.api.pagoda.co/eapi/v1\n\nhttps://near-mainnet.api.pagoda.co/eapi/v1\n\nGrab your API keys and give it a try! We will be adding more advanced Enhanced APIs in our offering, so stay tuned. Get the data you need without extra processing, NEAR Blockchain data query has never been easier!\n\nWe would love to hear from you on the data APIs you need, please leave feedback using the widget in the lower-right corner.",
		"version": "0.1"
	},
	"servers": [
		{
			"url": "https://near-testnet.api.pagoda.co/eapi/v1"
		}
	],
	"paths": {
		"/NFT/{contract_account_id}/{token_id}": {
			"get": {
				"tags": [
					"NFT"
				],
				"summary": "Get NFT",
				"description": "This endpoint returns detailed information on the NFT\n for the given `token_id`, NFT `contract_account_id`, `block_timestamp_nanos`/`block_height`.",
				"parameters": [
					{
						"in": "path",
						"name": "contract_account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "path",
						"name": "token_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "block_height",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "block_timestamp_nanos",
						"schema": {
							"type": "string"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NftResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/NFT/{contract_account_id}/{token_id}/history": {
			"get": {
				"tags": [
					"NFT"
				],
				"summary": "Get NFT history",
				"description": "This endpoint returns the transaction history for the given NFT.\n **Note:** The result is centered around the history of the specific NFT and will return list of its passing owners.\n\n **Limitations**\n * For now, we only support NFT contracts that implement the Events NEP standard.\n * We currently provide the most recent 100 items.\n   Full-featured pagination will be provided soon.",
				"parameters": [
					{
						"in": "path",
						"name": "contract_account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "path",
						"name": "token_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NftHistoryResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/accounts/{account_id}/NFT": {
			"get": {
				"tags": [
					"NFT"
				],
				"summary": "Get user's NFT collection overview",
				"description": "For the given `account_id`, this endpoint returns\n the number of NFTs grouped by `contract_account_id`, together with the corresponding NFT contract metadata.\n The NFT contract will be present in the response if the `account_id` has at least one NFT there.\n\n **Limitations**\n * We currently provide the most recent 100 items.\n   Full-featured pagination will be provided soon.",
				"parameters": [
					{
						"in": "path",
						"name": "account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NftCountsResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/accounts/{account_id}/NFT/{contract_account_id}": {
			"get": {
				"tags": [
					"NFT"
				],
				"summary": "Get user's NFT collection by contract",
				"description": "This endpoint returns the list of NFTs with full details for the given `account_id`, NFT `contract_account_id`.\n You can use the `token_id` from this response and then request the NFT history for that token.\n\n **Limitations**\n * We currently provide the most recent 100 items.\n   Full-featured pagination will be provided soon.",
				"parameters": [
					{
						"in": "path",
						"name": "account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "path",
						"name": "contract_account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NftsResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/accounts/{account_id}/balances/FT": {
			"get": {
				"tags": [
					"FT"
				],
				"summary": "Get user's FT balances",
				"description": "This endpoint returns all non-zero FT balances of the given `account_id`,\n at the given `block_timestamp_nanos`/`block_height`.\n\n **Limitations**\n This endpoint scans all the FT contracts.\n We currently provide up to 100 results, which covers almost all the potential situations.\n Anyway, full-featured pagination will be provided soon.",
				"parameters": [
					{
						"in": "path",
						"name": "account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "block_height",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "block_timestamp_nanos",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FtBalancesResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/accounts/{account_id}/balances/FT/{contract_account_id}": {
			"get": {
				"tags": [
					"FT"
				],
				"summary": "Get user's FT balance by contract",
				"description": "This endpoint returns FT balance of the given `account_id`,\n for the given `contract_account_id` and `block_timestamp_nanos`/`block_height`.",
				"parameters": [
					{
						"in": "path",
						"name": "account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "path",
						"name": "contract_account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "block_height",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "block_timestamp_nanos",
						"schema": {
							"type": "string"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FtBalanceByContractResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/accounts/{account_id}/balances/FT/{contract_account_id}/history": {
			"get": {
				"tags": [
					"FT"
				],
				"summary": "Get user's FT history by contract",
				"description": "This endpoint returns the history of FT operations\n for the given `account_id`, `contract_account_id`.\n For the next page, use `event_index` of the last item in your previous response.",
				"parameters": [
					{
						"in": "path",
						"name": "account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "path",
						"name": "contract_account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "after_event_index",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Maximum available limit 100",
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FtHistoryResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/accounts/{account_id}/balances/NEAR": {
			"get": {
				"tags": [
					"NEAR"
				],
				"summary": "Get user's NEAR balance",
				"description": "This endpoint returns the NEAR balance of the given `account_id`\n at the given `block_timestamp_nanos`/`block_height`.",
				"parameters": [
					{
						"in": "path",
						"name": "account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "block_height",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "block_timestamp_nanos",
						"schema": {
							"type": "string"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NearBalanceResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/accounts/{account_id}/balances/NEAR/history": {
			"get": {
				"tags": [
					"NEAR"
				],
				"summary": "Get user's NEAR history",
				"description": "This endpoint returns the history of NEAR operations\n for the given `account_id`, `block_timestamp_nanos`/`block_height`.\n For the next page, use `event_index` of the last item in your previous response.",
				"parameters": [
					{
						"in": "path",
						"name": "account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "after_event_index",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "limit",
						"description": "Maximum available limit 100",
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NearHistoryResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/nep141/metadata/{contract_account_id}": {
			"get": {
				"tags": [
					"FT"
				],
				"summary": "Get FT metadata",
				"description": "This endpoint returns the metadata for the given `contract_account_id`, `block_timestamp_nanos`/`block_height`.",
				"parameters": [
					{
						"in": "path",
						"name": "contract_account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "block_height",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "block_timestamp_nanos",
						"schema": {
							"type": "string"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FtContractMetadataResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		},
		"/nep171/metadata/{contract_account_id}": {
			"get": {
				"tags": [
					"NFT"
				],
				"summary": "Get NFT contract metadata",
				"description": "This endpoint returns the metadata for a given NFT contract and `block_timestamp_nanos`/`block_height`.\n **Note:** This is contract-wide metadata. Each NFT also has its own metadata.",
				"parameters": [
					{
						"in": "path",
						"name": "contract_account_id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					},
					{
						"in": "query",
						"name": "block_height",
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"in": "query",
						"name": "block_timestamp_nanos",
						"schema": {
							"type": "string"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetadataResponse"
								}
							}
						}
					},
					"500": {
						"description": "See the inner `code` value to get more details"
					}
				},
				"security": [
					{
						"apiKey": []
					}
				]
			}
		}
	},
	"components": {
		"securitySchemes": {
			"apiKey": {
				"type": "apiKey",
				"in": "header",
				"name": "x-api-key",
				"description": "Use Pagoda DevConsole API key here"
			}
		},
		"schemas": {
			"FtBalanceByContractResponse": {
				"type": "object",
				"properties": {
					"balance": {
						"type": "object",
						"properties": {
							"amount": {
								"type": "string"
							},
							"contract_account_id": {
								"type": "string"
							},
							"metadata": {
								"description": "This type describes general Metadata info, collecting the most important fields from different standards in the one format.",
								"type": "object",
								"properties": {
									"decimals": {
										"type": "integer",
										"format": "int32"
									},
									"icon": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"symbol": {
										"type": "string"
									}
								},
								"required": [
									"decimals",
									"name",
									"symbol"
								]
							}
						},
						"required": [
							"amount",
							"contract_account_id",
							"metadata"
						]
					},
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					}
				},
				"required": [
					"balance",
					"block_height",
					"block_timestamp_nanos"
				]
			},
			"FtBalancesResponse": {
				"type": "object",
				"properties": {
					"balances": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"amount": {
									"type": "string"
								},
								"contract_account_id": {
									"type": "string"
								},
								"metadata": {
									"description": "This type describes general Metadata info, collecting the most important fields from different standards in the one format.",
									"type": "object",
									"properties": {
										"decimals": {
											"type": "integer",
											"format": "int32"
										},
										"icon": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									},
									"required": [
										"decimals",
										"name",
										"symbol"
									]
								}
							},
							"required": [
								"amount",
								"contract_account_id",
								"metadata"
							]
						}
					},
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					}
				},
				"required": [
					"balances",
					"block_height",
					"block_timestamp_nanos"
				]
			},
			"FtContractMetadataResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"metadata": {
						"description": "The type for FT Contract Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/FungibleToken/Metadata",
						"type": "object",
						"properties": {
							"decimals": {
								"type": "integer",
								"format": "int32"
							},
							"icon": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"reference": {
								"type": "string"
							},
							"reference_hash": {
								"type": "string"
							},
							"spec": {
								"type": "string"
							},
							"symbol": {
								"type": "string"
							}
						},
						"required": [
							"decimals",
							"name",
							"spec",
							"symbol"
						]
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"metadata"
				]
			},
			"FtHistoryResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"history": {
						"type": "array",
						"items": {
							"description": "This type describes the history of the operations (NEAR, FT) for the given user.",
							"type": "object",
							"properties": {
								"balance": {
									"type": "string"
								},
								"block_height": {
									"type": "string"
								},
								"block_timestamp_nanos": {
									"type": "string"
								},
								"cause": {
									"type": "string"
								},
								"delta_balance": {
									"type": "string"
								},
								"event_index": {
									"type": "string"
								},
								"involved_account_id": {
									"type": "string"
								},
								"metadata": {
									"description": "This type describes general Metadata info, collecting the most important fields from different standards in the one format.",
									"type": "object",
									"properties": {
										"decimals": {
											"type": "integer",
											"format": "int32"
										},
										"icon": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									},
									"required": [
										"decimals",
										"name",
										"symbol"
									]
								},
								"status": {
									"type": "string"
								}
							},
							"required": [
								"balance",
								"block_height",
								"block_timestamp_nanos",
								"cause",
								"delta_balance",
								"event_index",
								"metadata",
								"status"
							]
						}
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"history"
				]
			},
			"MetadataResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"metadata": {
						"description": "The type for Non Fungible Token Contract Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
						"type": "object",
						"properties": {
							"base_uri": {
								"type": "string"
							},
							"icon": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"reference": {
								"type": "string"
							},
							"reference_hash": {
								"type": "string"
							},
							"spec": {
								"type": "string"
							},
							"symbol": {
								"type": "string"
							}
						},
						"required": [
							"name",
							"spec",
							"symbol"
						]
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"metadata"
				]
			},
			"NearBalanceResponse": {
				"type": "object",
				"properties": {
					"balance": {
						"type": "object",
						"properties": {
							"amount": {
								"description": "Sum of staked and nonstaked balances",
								"type": "string"
							},
							"metadata": {
								"description": "This type describes general Metadata info",
								"type": "object",
								"properties": {
									"decimals": {
										"type": "integer",
										"format": "int32"
									},
									"icon": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"symbol": {
										"type": "string"
									}
								},
								"required": [
									"decimals",
									"name",
									"symbol"
								]
							}
						},
						"required": [
							"amount",
							"metadata"
						]
					},
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					}
				},
				"required": [
					"balance",
					"block_height",
					"block_timestamp_nanos"
				]
			},
			"NearHistoryResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"history": {
						"type": "array",
						"items": {
							"description": "This type describes the history of the operations (NEAR, FT) for the given user.",
							"type": "object",
							"properties": {
								"balance": {
									"type": "string"
								},
								"block_height": {
									"type": "string"
								},
								"block_timestamp_nanos": {
									"type": "string"
								},
								"cause": {
									"type": "string"
								},
								"delta_balance": {
									"type": "string"
								},
								"event_index": {
									"type": "string"
								},
								"involved_account_id": {
									"type": "string"
								},
								"metadata": {
									"description": "This type describes general Metadata info",
									"type": "object",
									"properties": {
										"decimals": {
											"type": "integer",
											"format": "int32"
										},
										"icon": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									},
									"required": [
										"decimals",
										"name",
										"symbol"
									]
								},
								"status": {
									"type": "string"
								}
							},
							"required": [
								"balance",
								"block_height",
								"block_timestamp_nanos",
								"cause",
								"delta_balance",
								"event_index",
								"metadata",
								"status"
							]
						}
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"history"
				]
			},
			"NftCountsResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"nft_counts": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"contract_account_id": {
									"type": "string"
								},
								"contract_metadata": {
									"description": "The type for Non Fungible Token Contract Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
									"type": "object",
									"properties": {
										"base_uri": {
											"type": "string"
										},
										"icon": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"reference": {
											"type": "string"
										},
										"reference_hash": {
											"type": "string"
										},
										"spec": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									},
									"required": [
										"name",
										"spec",
										"symbol"
									]
								},
								"last_updated_at_timestamp_nanos": {
									"type": "string"
								},
								"nft_count": {
									"type": "integer",
									"format": "int32"
								}
							},
							"required": [
								"contract_account_id",
								"contract_metadata",
								"last_updated_at_timestamp_nanos",
								"nft_count"
							]
						}
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"nft_counts"
				]
			},
			"NftHistoryResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"history": {
						"type": "array",
						"items": {
							"description": "This type describes the history of NFT movements.\n Note, it's not attached to any user, it's the whole history of NFT movements.\n `cause` is one of [\"mint\", \"transfer\", \"burn\"]",
							"type": "object",
							"properties": {
								"block_height": {
									"type": "string"
								},
								"block_timestamp_nanos": {
									"type": "string"
								},
								"cause": {
									"type": "string"
								},
								"new_account_id": {
									"type": "string"
								},
								"old_account_id": {
									"type": "string"
								},
								"status": {
									"type": "string"
								}
							},
							"required": [
								"block_height",
								"block_timestamp_nanos",
								"cause",
								"status"
							]
						}
					},
					"nft": {
						"description": "The type for Non Fungible Token. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
						"type": "object",
						"properties": {
							"metadata": {
								"description": "The type for Non Fungible Token Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
								"type": "object",
								"properties": {
									"copies": {
										"type": "integer",
										"format": "int64"
									},
									"description": {
										"type": "string"
									},
									"extra": {
										"type": "string"
									},
									"media": {
										"type": "string"
									},
									"media_hash": {
										"type": "string"
									},
									"reference": {
										"type": "string"
									},
									"reference_hash": {
										"type": "string"
									},
									"title": {
										"type": "string"
									}
								}
							},
							"owner_account_id": {
								"type": "string"
							},
							"token_id": {
								"type": "string"
							}
						},
						"required": [
							"metadata",
							"owner_account_id",
							"token_id"
						]
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"history",
					"nft"
				]
			},
			"NftResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"contract_metadata": {
						"description": "The type for Non Fungible Token Contract Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
						"type": "object",
						"properties": {
							"base_uri": {
								"type": "string"
							},
							"icon": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"reference": {
								"type": "string"
							},
							"reference_hash": {
								"type": "string"
							},
							"spec": {
								"type": "string"
							},
							"symbol": {
								"type": "string"
							}
						},
						"required": [
							"name",
							"spec",
							"symbol"
						]
					},
					"nft": {
						"description": "The type for Non Fungible Token. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
						"type": "object",
						"properties": {
							"metadata": {
								"description": "The type for Non Fungible Token Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
								"type": "object",
								"properties": {
									"copies": {
										"type": "integer",
										"format": "int64"
									},
									"description": {
										"type": "string"
									},
									"extra": {
										"type": "string"
									},
									"media": {
										"type": "string"
									},
									"media_hash": {
										"type": "string"
									},
									"reference": {
										"type": "string"
									},
									"reference_hash": {
										"type": "string"
									},
									"title": {
										"type": "string"
									}
								}
							},
							"owner_account_id": {
								"type": "string"
							},
							"token_id": {
								"type": "string"
							}
						},
						"required": [
							"metadata",
							"owner_account_id",
							"token_id"
						]
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"contract_metadata",
					"nft"
				]
			},
			"NftsResponse": {
				"type": "object",
				"properties": {
					"block_height": {
						"type": "string"
					},
					"block_timestamp_nanos": {
						"type": "string"
					},
					"contract_metadata": {
						"description": "The type for Non Fungible Token Contract Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
						"type": "object",
						"properties": {
							"base_uri": {
								"type": "string"
							},
							"icon": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"reference": {
								"type": "string"
							},
							"reference_hash": {
								"type": "string"
							},
							"spec": {
								"type": "string"
							},
							"symbol": {
								"type": "string"
							}
						},
						"required": [
							"name",
							"spec",
							"symbol"
						]
					},
					"nfts": {
						"type": "array",
						"items": {
							"description": "The type for Non Fungible Token. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
							"type": "object",
							"properties": {
								"metadata": {
									"description": "The type for Non Fungible Token Metadata. Inspired by\n https://nomicon.io/Standards/Tokens/NonFungibleToken/Metadata",
									"type": "object",
									"properties": {
										"copies": {
											"type": "integer",
											"format": "int64"
										},
										"description": {
											"type": "string"
										},
										"extra": {
											"type": "string"
										},
										"media": {
											"type": "string"
										},
										"media_hash": {
											"type": "string"
										},
										"reference": {
											"type": "string"
										},
										"reference_hash": {
											"type": "string"
										},
										"title": {
											"type": "string"
										}
									}
								},
								"owner_account_id": {
									"type": "string"
								},
								"token_id": {
									"type": "string"
								}
							},
							"required": [
								"metadata",
								"owner_account_id",
								"token_id"
							]
						}
					}
				},
				"required": [
					"block_height",
					"block_timestamp_nanos",
					"contract_metadata",
					"nfts"
				]
			}
		}
	}
}